{"/Users/shubhadipmaity/playwright-course/01 Starting Project 2/playwright.config.js":{"path":"/Users/shubhadipmaity/playwright-course/01 Starting Project 2/playwright.config.js","statementMap":{"0":{"start":{"line":8,"column":4},"end":{"line":8,"column":31}},"1":{"start":{"line":19,"column":0},"end":{"line":97,"column":3}}},"fnMap":{},"branchMap":{"0":{"loc":{"start":{"line":35,"column":11},"end":{"line":35,"column":33}},"type":"cond-expr","locations":[{"start":{"line":35,"column":28},"end":{"line":35,"column":29}},{"start":{"line":35,"column":32},"end":{"line":35,"column":33}}],"line":35},"1":{"loc":{"start":{"line":37,"column":11},"end":{"line":37,"column":41}},"type":"cond-expr","locations":[{"start":{"line":37,"column":28},"end":{"line":37,"column":29}},{"start":{"line":37,"column":32},"end":{"line":37,"column":41}}],"line":37}},"s":{"0":1,"1":1},"f":{},"b":{"0":[0,1],"1":[0,1]},"inputSourceMap":{"version":3,"names":["defineConfig","devices","selectors","require","module","exports","testDir","timeout","expect","fullyParallel","forbidOnly","process","env","CI","retries","workers","undefined","reporter","use","actionTimeout","baseURL","trace","testIdAttribute","projects","name","webServer","command","port"],"sources":["playwright.config.js"],"sourcesContent":["// @ts-check\nconst { defineConfig, devices, selectors } = require('@playwright/test');\n\n/**\n * Read environment variables from file.\n * https://github.com/motdotla/dotenv\n */\n// require('dotenv').config();\n\n/**\n * @see https://playwright.dev/docs/test-configuration\n */\nmodule.exports = defineConfig({\n  testDir: './tests',\n  /* Maximum time one test can run for. */\n  timeout: 30 * 1000,\n  expect: {\n    /**\n     * Maximum time expect() should wait for the condition to be met.\n     * For example in `await expect(locator).toHaveText();`\n     */\n    timeout: 5000\n  },\n  /* Run tests in files in parallel */\n  fullyParallel: true,\n  /* Fail the build on CI if you accidentally left test.only in the source code. */\n  forbidOnly: !!process.env.CI,\n  /* Retry on CI only */\n  retries: process.env.CI ? 2 : 0,\n  /* Opt out of parallel tests on CI. */\n  workers: process.env.CI ? 1 : undefined,\n  /* Reporter to use. See https://playwright.dev/docs/test-reporters */\n  reporter: 'html',\n  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */\n  use: {\n    /* Maximum time each action such as `click()` can take. Defaults to 0 (no limit). */\n    actionTimeout: 0,\n    /* Base URL to use in actions like `await page.goto('/')`. */\n    baseURL: 'http://localhost:5173',\n\n    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */\n    trace: 'on-first-retry',\n    testIdAttribute: 'data-cy'\n  },\n\n  /* Configure projects for major browsers */\n  projects: [\n    {\n      name: 'chromium',\n      use: { ...devices['Desktop Chrome'] },\n    },\n\n    // {\n    //   name: 'firefox',\n    //   use: { ...devices['Desktop Firefox'] },\n    // },\n\n    // {\n    //   name: 'webkit',\n    //   use: { ...devices['Desktop Safari'] },\n    // },\n\n    /* Test against mobile viewports. */\n    // {\n    //   name: 'Mobile Chrome',\n    //   use: { ...devices['Pixel 5'] },\n    // },\n    // {\n    //   name: 'Mobile Safari',\n    //   use: { ...devices['iPhone 12'] },\n    // },\n\n    /* Test against branded browsers. */\n    // {\n    //   name: 'Microsoft Edge',\n    //   use: { channel: 'msedge' },\n    // },\n    // {\n    //   name: 'Google Chrome',\n    //   use: { channel: 'chrome' },\n    // },\n  ],\n\n  /* Folder for test artifacts such as screenshots, videos, traces, etc. */\n  // outputDir: 'test-results/',\n\n  /* Run your local dev server before starting the tests */\n  webServer: {\n    command: 'npm run dev',\n    port: 5173,\n  },\n});\n\n"],"mappings":";;AAAA;AACA,MAAM;EAAEA,YAAY;EAAEC,OAAO;EAAEC;AAAU,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;;AAExE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAGL,YAAY,CAAC;EAC5BM,OAAO,EAAE,SAAS;EAClB;EACAC,OAAO,EAAE,EAAE,GAAG,IAAI;EAClBC,MAAM,EAAE;IACN;AACJ;AACA;AACA;IACID,OAAO,EAAE;EACX,CAAC;EACD;EACAE,aAAa,EAAE,IAAI;EACnB;EACAC,UAAU,EAAE,CAAC,CAACC,OAAO,CAACC,GAAG,CAACC,EAAE;EAC5B;EACAC,OAAO,EAAEH,OAAO,CAACC,GAAG,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC;EAC/B;EACAE,OAAO,EAAEJ,OAAO,CAACC,GAAG,CAACC,EAAE,GAAG,CAAC,GAAGG,SAAS;EACvC;EACAC,QAAQ,EAAE,MAAM;EAChB;EACAC,GAAG,EAAE;IACH;IACAC,aAAa,EAAE,CAAC;IAChB;IACAC,OAAO,EAAE,uBAAuB;IAEhC;IACAC,KAAK,EAAE,gBAAgB;IACvBC,eAAe,EAAE;EACnB,CAAC;EAED;EACAC,QAAQ,EAAE,CACR;IACEC,IAAI,EAAE,UAAU;IAChBN,GAAG,EAAE;MAAE,GAAGjB,OAAO,CAAC,gBAAgB;IAAE;EACtC;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA,CACD;;EAED;EACA;;EAEA;EACAwB,SAAS,EAAE;IACTC,OAAO,EAAE,aAAa;IACtBC,IAAI,EAAE;EACR;AACF,CAAC,CAAC"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6db8cf38290827f7ac05994bf137a0bbfd8daa3b","contentHash":"8b59e2e0942aab93495772626661650e0d1353b82d982d4913076e3d846e5b32"}}